"""
Demo script to show how the wallet address is remembered across sessions
"""

import json
import sys
import os
import time
import uuid
from session_manager import store_wallet_address, get_wallet_address

def simulate_bedrock_sessions():
    """
    Simulate multiple Bedrock agent sessions to show wallet address persistence
    """
    # Set mock environment 
    os.environ['BEDROCK_SESSIONS_TABLE'] = 'NFTBedrockSessions-demo'
    
    # Create a session ID (this would normally be generated by Bedrock)
    session_id = "demo-" + str(uuid.uuid4())[:8]
    print(f"\n📋 Created new session: {session_id}")
    
    print("\n🔍 First session - Agent asks for wallet address since none is stored")
    
    # User provides wallet address
    wallet_address = "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
    print(f"\n👤 User provides wallet address: {wallet_address}")
    
    # Agent stores the wallet address
    print("\n💾 Agent stores the wallet address in DynamoDB session table")
    store_wallet_address(session_id, wallet_address)
    
    # Agent shows wallet info
    print("\n🪙 Agent shows wallet info and NFTs")
    print("   ├── Wallet balance: 1.245 ETH")
    print("   └── NFTs: Azuki #9839, CryptoPunk #1234")
    
    print("\n--- User closes the chat window and returns later ---")
    time.sleep(2)
    
    print(f"\n🔄 User returns with the same session ID: {session_id}")
    
    # Agent retrieves the wallet address
    stored_address = get_wallet_address(session_id)
    
    if stored_address:
        print(f"\n✅ Agent automatically retrieved wallet address: {stored_address}")
        print("\n🪙 Agent shows wallet info without asking for address again")
        print("   ├── Wallet balance: 1.245 ETH")
        print("   └── NFTs: Azuki #9839, CryptoPunk #1234")
        
        # User requests to make a payment
        print("\n👤 User: 'I want to make a payment for the NFT collection analysis'")
        
        # Agent can process payment without asking for wallet address again
        print("\n💰 Agent: 'I'll process your payment of 0.005 ETH from your wallet")
        print(f"   {stored_address} which I remembered from our previous conversation.'")
    else:
        print("\n❌ Failed to retrieve wallet address from session")
        
    return stored_address is not None

if __name__ == "__main__":
    success = simulate_bedrock_sessions()
    sys.exit(0 if success else 1)
